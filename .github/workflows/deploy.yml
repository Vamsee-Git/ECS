name: Terraform Deploy Usecase3

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (e.g., dev, staging, prod)"
        required: true
        type: string

env:
  AWS_REGION: "us-east-1" # Replace with your AWS region
  TF_VERSION: "1.5.7"    # Replace with your desired Terraform version
  ECR_REPOSITORY: "dev-ecr" # Replace with your ECR repository name

jobs:
  terraform:
    name: "Terraform Deploy"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Required for private repositories
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        id: init
        run: |
          cd terraform
          terraform init


      - name: Select or Create Terraform Workspace
        id: workspace
        run: |
          cd terraform
          # Try to select the workspace
          terraform workspace select ${{ github.event.inputs.environment }} || \
          # If the workspace doesn't exist, create it
          terraform workspace new ${{ github.event.inputs.environment }}

      - name: Terraform Plan
        id: plan
        run: |
          cd terraform
          terraform plan -var="environment=${{ github.event.inputs.environment }}" -input=false -lock=false

      - name: Terraform Apply
        id: apply
        run: |
          cd terraform
          terraform apply -var="environment=${{ github.event.inputs.environment }}" -auto-approve -input=false -lock=false
